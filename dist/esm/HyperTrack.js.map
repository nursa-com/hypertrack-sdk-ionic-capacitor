{"version":3,"file":"HyperTrack.js","sourceRoot":"","sources":["../../src/HyperTrack.ts"],"names":[],"mappings":"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","sourcesContent":["import { HyperTrackError } from './data_types/HyperTrackError';\nimport type { IsAvailable } from './data_types/internal/IsAvailable';\nimport type { IsTracking } from './data_types/internal/IsTracking';\nimport type { Location } from './data_types/Location';\nimport type { LocationError } from './data_types/LocationError';\nimport type { DeviceId } from './data_types/internal/DeviceId';\nimport type { GeotagData } from './data_types/internal/GeotagData';\nimport type { Name } from './data_types/internal/Name';\nimport type { HyperTrackErrorInternal } from './data_types/internal/HyperTrackErrorInternal';\nimport type { LocationWithDeviation } from './data_types/LocationWithDeviation';\nimport type { LocationErrorInternal } from './data_types/internal/LocationErrorInternal';\nimport type { Result } from './data_types/Result';\nimport type { LocationInternal } from './data_types/internal/LocationInternal';\nimport type { LocationWithDeviationInternal } from './data_types/internal/LocationWithDeviationInternal';\nimport type { Metadata } from './data_types/internal/Metadata';\nimport type { OrderHandle } from './data_types/internal/OrderHandle';\nimport { registerPlugin } from '@capacitor/core';\nimport { Subscription } from './Subscription';\nimport { Errors, HyperTrackCapacitorPlugin } from './HyperTrackCapacitorPlugin';\nimport { OrderStatus } from './data_types/OrderStatus';\n\nexport const EVENT_ERRORS = 'errors';\nexport const EVENT_IS_AVAILABLE = 'isAvailable';\nexport const EVENT_IS_TRACKING = 'isTracking';\nexport const EVENT_LOCATE = 'locate';\nexport const EVENT_LOCATION = 'location';\n\nconst hyperTrackPlugin = registerPlugin<HyperTrackCapacitorPlugin>('HyperTrackCapacitorPlugin', {\n  // web: () => import('./web').then(m => new m.HyperTrackSdkWeb()),\n});\n\nexport default class HyperTrack {\n  private static locateSubscription: Subscription | undefined;\n\n  /**\n   * Adds a new geotag\n   *\n   * @param {string} orderHandle - Order handle\n   * @param {OrderStatus} orderStatus - Order status\n   * @param {Object} data - Geotag data JSON\n   * @returns current location if success or LocationError if failure\n   */\n  static async addGeotag(\n    orderHandle: string,\n    orderStatus: OrderStatus,\n    data: Object,\n  ): Promise<Result<Location, LocationError>>;\n\n  /**\n   * Adds a new geotag with expected location\n   *\n   * @param {string} orderHandle - Order handle\n   * @param {OrderStatus} orderStatus - Order status\n   * @param {Object} data - Geotag data JSON\n   * @param {Location} expectedLocation - Expected location\n   * @returns location with deviation if success or LocationError if failure\n   */\n  static async addGeotag(\n    orderHandle: string,\n    orderStatus: OrderStatus,\n    data: Object,\n    expectedLocation: Location,\n  ): Promise<Result<LocationWithDeviation, LocationError>>;\n\n  /**\n   * @deprecated\n   * Adds a new geotag\n   *\n   * @param {Object} data - Geotag data JSON\n   * @returns current location if success or LocationError if failure\n   */\n  static async addGeotag(data: Object): Promise<Result<Location, LocationError>>;\n\n  /**\n   * @deprecated\n   * Adds a new geotag with expected location\n   *\n   * @param {Object} data - Geotag data JSON\n   * @param {Location} expectedLocation - Expected location\n   * @returns location with deviation if success or LocationError if failure\n   */\n  static async addGeotag(\n    data: Object,\n    expectedLocation: Location,\n  ): Promise<Result<LocationWithDeviation, LocationError>>;\n\n  static async addGeotag(...args: any[]): Promise<Result<Location | LocationWithDeviation, LocationError>> {\n    if (\n      args.length === 3 &&\n      typeof args[0] === 'string' &&\n      HyperTrack.isOrderStatus(args[1]) &&\n      typeof args[2] === 'object'\n    ) {\n      // addGeotag(orderHandle: string, orderStatus: OrderStatus, data: Object)\n      return hyperTrackPlugin\n        .addGeotag({\n          orderHandle: {\n            type: 'orderHandle',\n            value: args[0],\n          } as OrderHandle,\n          orderStatus: args[1],\n          data: args[2],\n          expectedLocation: undefined,\n        } as GeotagData)\n        .then((locationResponse: Result<LocationInternal, LocationErrorInternal>) => {\n          return this.deserializeLocationResponse(locationResponse);\n        });\n    }\n    if (\n      args.length === 4 &&\n      typeof args[0] === 'string' &&\n      HyperTrack.isOrderStatus(args[1]) &&\n      typeof args[2] === 'object' &&\n      HyperTrack.isLocation(args[3])\n    ) {\n      // addGeotag(orderHandle: string, orderStatus: OrderStatus, data: Object, expectedLocation: Location)\n      return hyperTrackPlugin\n        .addGeotag({\n          orderHandle: {\n            type: 'orderHandle',\n            value: args[0],\n          } as OrderHandle,\n          orderStatus: args[1],\n          data: args[2],\n          expectedLocation: {\n            type: 'location',\n            value: {\n              latitude: args[3].latitude,\n              longitude: args[3].longitude,\n            },\n          } as LocationInternal,\n        } as GeotagData)\n        .then((locationResponse: Result<LocationWithDeviationInternal, LocationErrorInternal>) => {\n          return this.deserializeLocationWithDeviationResponse(locationResponse);\n        });\n    }\n    if (args.length === 1 && typeof args[0] === 'object') {\n      // addGeotag(data: Object)\n      return hyperTrackPlugin\n        .addGeotag({\n          data: args[0],\n          expectedLocation: undefined,\n        } as GeotagData)\n        .then((locationResponse: Result<LocationInternal, LocationErrorInternal>) => {\n          return this.deserializeLocationResponse(locationResponse);\n        });\n    }\n    if (args.length === 2 && typeof args[0] === 'object' && HyperTrack.isLocation(args[1])) {\n      // addGeotag(data: Object, expectedLocation: Location)\n      return hyperTrackPlugin\n        .addGeotag({\n          data: args[0],\n          expectedLocation: {\n            type: 'location',\n            value: {\n              latitude: args[1].latitude,\n              longitude: args[1].longitude,\n            },\n          } as LocationInternal,\n        } as GeotagData)\n        .then((locationResponse: Result<LocationWithDeviationInternal, LocationErrorInternal>) => {\n          return this.deserializeLocationWithDeviationResponse(locationResponse);\n        });\n    }\n    throw new Error(`Invalid addGeotag() arguments: ${JSON.stringify(args)}`);\n  }\n\n  /**\n   * Returns a string that is used to uniquely identify the device\n   *\n   * @returns {string} Device ID\n   */\n  static async getDeviceId(): Promise<string> {\n    return hyperTrackPlugin.getDeviceId().then((deviceId: DeviceId) => deviceId.value);\n  }\n\n  /**\n   * Returns a list of errors that blocks SDK from tracking\n   *\n   * @returns {HyperTrackError[]} List of errors\n   */\n  static async getErrors(): Promise<HyperTrackError[]> {\n    return hyperTrackPlugin.getErrors().then((errors: Errors) => {\n      return this.deserializeHyperTrackErrors(errors.errors);\n    });\n  }\n\n  /**\n   * Reflects availability of the device for the Nearby search\n   *\n   * @returns true when is available or false when unavailable\n   */\n  static async getIsAvailable(): Promise<boolean> {\n    return hyperTrackPlugin.getIsAvailable().then((isAvailable: IsAvailable) => isAvailable.value);\n  }\n\n  /**\n   * Reflects the tracking intent for the device\n   *\n   * @returns {boolean} Whether the user's movement data is getting tracked or not.\n   */\n  static async getIsTracking(): Promise<boolean> {\n    return hyperTrackPlugin.getIsTracking().then((isTracking: IsTracking) => isTracking.value);\n  }\n\n  /**\n   * Reflects the current location of the user or an outage reason\n   */\n  static async getLocation(): Promise<Result<Location, LocationError>> {\n    return hyperTrackPlugin.getLocation().then((locationResponse: Result<LocationInternal, LocationErrorInternal>) => {\n      return this.deserializeLocationResponse(locationResponse);\n    });\n  }\n\n  /**\n   * Gets the metadata that is set for the device\n   *\n   * @returns {Object} Metadata JSON\n   */\n  static async getMetadata(): Promise<Object> {\n    return hyperTrackPlugin.getMetadata().then((metadata: Metadata) => {\n      return this.deserializeMetadata(metadata);\n    });\n  }\n\n  /**\n   * Gets the name that is set for the device\n   *\n   * @returns {string} Device name\n   */\n  static async getName(): Promise<string> {\n    return hyperTrackPlugin.getName().then((name: Name) => {\n      return this.deserializeName(name);\n    });\n  }\n\n  /**\n   * Requests one-time location update and returns the location once it is available, or error.\n   *\n   * Only one locate subscription can be active at a time. If you re-subscribe, the old Subscription\n   * will be automaticaly removed.\n   *\n   * This method will start location tracking if called, and will stop it when the location is received or\n   * the subscription is cancelled. If any other tracking intent is present (e.g. isAvailable is set to `true`),\n   * the tracking will not be stopped.\n   *\n   * @param callback\n   * @returns Subscription\n   * @example\n   * ```js\n   * const subscription = HyperTrack.locate(location => {\n   *  ...\n   * })\n   *\n   * // to unsubscribe\n   * subscription.remove()\n   * ```\n   */\n  static locate(callback: (locateResult: Result<Location, HyperTrackError[]>) => void) {\n    // this call doesn't work on iOS for some reason\n    this.locateSubscription?.remove();\n    this.locateSubscription = hyperTrackPlugin.addListener(\n      EVENT_LOCATE,\n      (location: Result<LocationInternal, HyperTrackErrorInternal[]>) => {\n        callback(this.deserializeLocateResponse(location));\n        // so we remove the subscription here (locate should return only one event)\n        this.locateSubscription?.remove();\n      },\n    );\n    hyperTrackPlugin.onSubscribedToLocate();\n    return this.locateSubscription;\n  }\n\n  /**\n   * Sets the availability of the device for the Nearby search\n   *\n   * @param availability true when is available or false when unavailable\n   */\n  static async setIsAvailable(isAvailable: boolean) {\n    hyperTrackPlugin.setIsAvailable({\n      type: 'isAvailable',\n      value: isAvailable,\n    } as IsAvailable);\n  }\n\n  /**\n   * Sets the tracking intent for the device\n   *\n   * @param {boolean} isTracking\n   */\n  static async setIsTracking(isTracking: boolean): Promise<void> {\n    hyperTrackPlugin.setIsTracking({\n      type: 'isTracking',\n      value: isTracking,\n    } as IsTracking);\n  }\n\n  /**\n   * Sets the metadata for the device\n   *\n   * @param {Object} data - Metadata JSON\n   */\n  static async setMetadata(data: Object) {\n    hyperTrackPlugin.setMetadata({\n      type: 'metadata',\n      value: data,\n    });\n  }\n\n  /**\n   * Sets the name for the device\n   *\n   * @param {string} name\n   */\n  static async setName(name: string) {\n    hyperTrackPlugin.setName({\n      type: 'name',\n      value: name,\n    } as Name);\n  }\n\n  /**\n   * Subscribe to tracking errors\n   *\n   * @param listener\n   * @returns Subscription\n   * @example\n   * ```js\n   * const subscription = HyperTrack.subscribeToErrors(errors => {\n   *   errors.forEach(error => {\n   *     // ... error\n   *   })\n   * })\n   *\n   * // later, to stop listening\n   * subscription.remove()\n   * ```\n   */\n  static subscribeToErrors(listener: (errors: HyperTrackError[]) => void): Subscription {\n    const result = hyperTrackPlugin.addListener(EVENT_ERRORS, (info: Errors) => {\n      listener(this.deserializeHyperTrackErrors(info.errors));\n    });\n    hyperTrackPlugin.onSubscribedToErrors();\n    return result;\n  }\n\n  /**\n   * Subscribe to availability changes\n   *\n   * @param listener\n   * @returns Subscription\n   * @example\n   * ```js\n   * const subscription = HyperTrack.subscribeToIsAvailable(isAvailable => {\n   *   if (isAvailable) {\n   *     // ... ready to go\n   *   }\n   * })\n   *\n   * // later, to stop listening\n   * subscription.remove()\n   * ```\n   */\n  static subscribeToIsAvailable(listener: (isAvailable: boolean) => void): Subscription {\n    const result = hyperTrackPlugin.addListener(EVENT_IS_AVAILABLE, (isAvailable: IsAvailable) => {\n      listener(isAvailable.value);\n    });\n    hyperTrackPlugin.onSubscribedToIsAvailable();\n    return result;\n  }\n\n  /**\n   * Subscribe to tracking intent changes\n   *\n   * @param listener\n   * @returns Subscription\n   * @example\n   * ```js\n   * const subscription = HyperTrack.subscribeToIsTracking(isTracking => {\n   *   if (isTracking) {\n   *     // ... ready to go\n   *   }\n   * })\n   *\n   * // later, to stop listening\n   * subscription.remove()\n   * ```\n   */\n  static subscribeToIsTracking(listener: (isTracking: boolean) => void): Subscription {\n    const result = hyperTrackPlugin.addListener(EVENT_IS_TRACKING, (isTracking: IsTracking) => {\n      listener(isTracking.value);\n    });\n    hyperTrackPlugin.onSubscribedToIsTracking();\n    return result;\n  }\n\n  /**\n   * Subscribe to location changes\n   *\n   * @param listener\n   * @returns Subscription\n   * @example\n   * ```js\n   * const subscription = HyperTrack.subscribeToLocation(location => {\n   *   ...\n   * })\n   *\n   * // later, to stop listening\n   * subscription.remove()\n   * ```\n   */\n  static subscribeToLocation(listener: (location: Result<Location, LocationError>) => void) {\n    const result = hyperTrackPlugin.addListener(\n      EVENT_LOCATION,\n      (location: Result<LocationInternal, LocationErrorInternal>) => {\n        listener(this.deserializeLocationResponse(location));\n      },\n    );\n    hyperTrackPlugin.onSubscribedToLocation();\n    return result;\n  }\n\n  /** @ignore */\n  private static deserializeHyperTrackErrors(errors: HyperTrackErrorInternal[]): HyperTrackError[] {\n    let res = errors.map((error: HyperTrackErrorInternal) => {\n      if (error.type !== 'error') {\n        throw new Error('Invalid error type');\n      }\n      return Object.keys(HyperTrackError).find(\n        (key) => HyperTrackError[key as keyof typeof HyperTrackError] === error.value,\n      ) as HyperTrackError;\n    });\n    return res;\n  }\n\n  /** @ignore */\n  private static deserializeLocateResponse(\n    response: Result<LocationInternal, HyperTrackErrorInternal[]>,\n  ): Result<Location, HyperTrackError[]> {\n    switch (response.type) {\n      case 'success':\n        return {\n          type: 'success',\n          value: response.value.value,\n        };\n      case 'failure':\n        return {\n          type: 'failure',\n          value: this.deserializeHyperTrackErrors(response.value),\n        };\n    }\n  }\n\n  /** @ignore */\n  private static deserializeLocationError(locationError: LocationErrorInternal): LocationError {\n    switch (locationError.type) {\n      case 'notRunning':\n      case 'starting':\n        return locationError;\n      case 'errors':\n        return {\n          type: 'errors',\n          value: this.deserializeHyperTrackErrors(locationError.value),\n        };\n    }\n  }\n\n  /** @ignore */\n  private static deserializeLocationResponse(\n    response: Result<LocationInternal, LocationErrorInternal>,\n  ): Result<Location, LocationError> {\n    switch (response.type) {\n      case 'success':\n        return {\n          type: 'success',\n          value: response.value.value,\n        };\n      case 'failure':\n        return {\n          type: 'failure',\n          value: this.deserializeLocationError(response.value),\n        };\n    }\n  }\n\n  /** @ignore */\n  private static deserializeLocationWithDeviationResponse(\n    response: Result<LocationWithDeviationInternal, LocationErrorInternal>,\n  ): Result<LocationWithDeviation, LocationError> {\n    switch (response.type) {\n      case 'success':\n        const locationWithDeviationInternal: LocationWithDeviationInternal = response.value;\n        const locationInternal: LocationInternal = locationWithDeviationInternal.value.location;\n\n        return {\n          type: 'success',\n          value: {\n            location: locationInternal.value,\n            deviation: locationWithDeviationInternal.value.deviation,\n          } as LocationWithDeviation,\n        };\n      case 'failure':\n        return {\n          type: 'failure',\n          value: this.deserializeLocationError(response.value),\n        };\n    }\n  }\n\n  /** @ignore */\n  private static deserializeMetadata(metadata: Metadata): Object {\n    if (metadata.type !== 'metadata') {\n      throw new Error(`Invalid metadata: ${JSON.stringify(metadata)}`);\n    }\n    return metadata.value;\n  }\n\n  /** @ignore */\n  private static deserializeName(name: Name): string {\n    if (name.type !== 'name') {\n      throw new Error(`Invalid name: ${JSON.stringify(name)}`);\n    }\n    return name.value;\n  }\n\n  /** @ignore */\n  private static isLocation(obj: Location): obj is Location {\n    return (\n      'latitude' in obj && typeof obj.latitude === 'number' && 'longitude' in obj && typeof obj.longitude === 'number'\n    );\n  }\n\n  /** @ignore */\n  private static isOrderStatus(obj: OrderStatus): obj is OrderStatus {\n    return 'type' in obj && obj.type.startsWith('orderStatus');\n  }\n}\n"]}